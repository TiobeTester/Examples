/*----------------------------------------------------------------------------
 * Name:    Dbg_Sim.ini
 * Purpose: Simulator Debug Initialization File
 * Note(s):
 *----------------------------------------------------------------------------
 * This file is part of the uVision/ARM development tools.
 * This software may only be used under the terms of a valid, current,
 * end user licence from KEIL for a compatible version of KEIL software
 * development tools. Nothing else gives you the right to use this software.
 *
 * This software is supplied "AS IS" without warranties of any kind.
 *
 * Copyright (c) 2012 Keil - An ARM Company. All rights reserved.
 *----------------------------------------------------------------------------*/


/*----------------------------------------------------------------------------
  MyStatus shows analog and other values ...
 *----------------------------------------------------------------------------*/
FUNC void MyStatus (void)  {
  printf ("=============================\n");
  printf (" Analog-Input-1:  %f\n", ADC1_IN1);
  printf (" GPIOA: %08X\n", PORTA);
  printf (" GPIOC: %08X\n", PORTC);
  printf ("=============================\n");
}

/*----------------------------------------------------------------------------
  Simulate Push button S3
    Pins: - S3 = PC.13
 *----------------------------------------------------------------------------*/
PORTC |= 0x002000;                      // set PC.13 high: Key Input

// debug function for the push button S3
signal void push_S3 (void)  {
  PORTC &= ~0x002000;                   // set PC.13 low  (Key pressed)
  swatch (0.025);                       // wait 25 msec
  PORTC |= 0x002000;                    // set PC.13 high (Key released)
}

/*----------------------------------------------------------------------------
  Simulate Push button S2
    Pins: - S2 = PA.0
 *----------------------------------------------------------------------------*/
PORTA |= 0x000001;                      // set PC.13 high: Key Input

// debug function for the push button S2
signal void push_S2 (void)  {
  PORTA &= ~0x000001;                   // set PA.0 low  (Key pressed)
  swatch (0.025);                       // wait 25 msec
  PORTA |= 0x000001;                    // set PA.0 high (Key released)
}

/*----------------------------------------------------------------------------
  Analog() simulates analog input values given to channel-1 (ADC1)
 *----------------------------------------------------------------------------*/
Signal void Analog (float limit)  {
  float volts;

  printf ("Analog (%f) entered.\n", limit);
  while (1)  {              /* forever */
    volts = 0;
    while (volts <= limit)  {
      ADC1_IN1 = volts;     /* analog input-2 */
      twatch (250000);      /* 250000 Cycles Time-Break */
      volts += 0.1;         /* increase voltage */
    }
    volts = limit;
    while (volts >= 0.0)  {
      ADC1_IN1 = volts;
      twatch (250000);      /* 250000 Cycles Time-Break */
      volts -= 0.1;         /* decrease voltage */
    }
  }
}


/* define a toolbar buttons */
KILL BUTTON *

define button "Button S2", "push_S2 ()"
define button "Button S3", "push_S3 ()"
define button "My Status Info", "MyStatus ()"
define button "Analog 0..3V", "Analog(3.0)"
define button "Stop Analog", "signal kill Analog"
